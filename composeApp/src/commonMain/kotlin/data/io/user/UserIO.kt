package data.io.user

import data.io.social.UserConfiguration
import kotlinx.serialization.Serializable

/** user object specific to our database saved in custom DB */
@Serializable
data class UserIO(
    /** username of the current user */
    val displayName: String? = null,

    /** tag of the current user, unique in combination with [displayName]  */
    val tag: String? = null,

    /** current idToken which should be active and can be associated with data in Cloud Identity */
    val idToken: String? = null,

    /** current session token of the Matrix protocol */
    val accessToken: String? = null,

    /** Matrix homeserver associated with this user */
    val matrixHomeserver: String? = null,

    /** Matrix user identifier */
    val matrixUserId: String? = null,

    /** current user's public id, generated by our BE - not associated with Firebase */
    val publicId: String? = null,

    /** current configuration specific to this user */
    val configuration: UserConfiguration? = null
) {

    val isFullyValid: Boolean
        get() = idToken != null
                && accessToken != null
                && matrixHomeserver != null
                && matrixUserId != null

    fun update(other: UserIO?): UserIO {
        return this.copy(
            displayName = other?.displayName ?: this.displayName,
            tag = other?.tag ?: this.tag,
            idToken = other?.idToken ?: this.idToken,
            accessToken = other?.accessToken ?: this.accessToken,
            matrixUserId = other?.matrixUserId ?: this.matrixUserId,
            matrixHomeserver = other?.matrixHomeserver ?: this.matrixHomeserver,
            publicId = other?.publicId ?: this.publicId,
            configuration = other?.configuration ?: this.configuration
        )
    }
}
